name: CI

on:
  workflow_dispatch:

env:
  CONFORMANCE_PATTERN: conformance/*/*
  EHR_PATTERN: ehr-connectivity/*/*
  MISC_PATTERN: miscellaneous/*/*
  TRANSFORMATION_PATTERN: transformation/*/*

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      JAVA_OPTS: -Xmx4G

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Ballerina Build
        uses: ballerina-platform/ballerina-action@2201.8.4
        with:
          args: pack
        env:
          WORKING_DIR: ./
          JAVA_HOME: /usr/lib/jvm/default-jvm

  test:
    runs-on: ubuntu-latest
    env:
      JAVA_OPTS: -Xmx4G

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Ballerina Test
        uses: ballerina-platform/ballerina-action@2201.8.4
        with:
          args: test --code-coverage
        env:
          WORKING_DIR: ./
          JAVA_HOME: /usr/lib/jvm/default-jvm
          EPIC_FHIR_SERVER_URL: ${{ secrets.EPIC_FHIR_SERVER_URL}}
          EPIC_FHIR_SERVER_TOKEN_URL: ${{ secrets.EPIC_FHIR_SERVER_TOKEN_URL}}
          EPIC_FHIR_APP_CLIENT_ID: ${{ secrets.EPIC_FHIR_APP_CLIENT_ID}}
          EPIC_FHIR_APP_PRIVATE_KEY_FILE: ${{ secrets.EPIC_FHIR_APP_PRIVATE_KEY_FILE}}

      - name: Read Ballerina Test Results
        id: test_results
        run: |
          if [ -f "./${{ matrix.path }}/target/report/test_results.json" ]; then
            content=`cat ./${{ matrix.path }}/target/report/test_results.json`                
            content="${content//'%'/'%25'}"
            content="${content//$'\n'/'%0A'}"
            content="${content//$'\r'/'%0D'}"

            echo "Covered Code Lines : $(echo "$content" | jq -r '.coveredLines')"
            echo "Total Code Lines : $(echo "$content" | jq -r '.missedLines') + $(echo "$content" | jq -r '.coveredLines')"
            echo "Code Coverage Percentage : $(echo "$content" | jq -r '.coveragePercentage')"
          else
            # echo "TEST_RESULTS_JSON=" >> $GITHUB_OUTPUT
            echo "No test results file found."
          fi
